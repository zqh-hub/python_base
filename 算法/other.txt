# 斐波那契
def fib(n):
    a, b = 1, 1
    for j in range(n - 1):
        a, b = b, a + b
    return a


# 9 * 9
def test99():
    for i in range(1, 10):
        for j in range(1, i + 1):
            print("{} * {} = {}".format(i, j, i * j), end=" ")
    print()


# 两数之和
def test_sum(nums, target):
    l = len(nums)
    for i in range(l):
        ano = target - nums[i]
        if ano in nums:
            j = nums.index(ano)
            if i == j:
                continue
            else:
                print([i, j])


# 反转
def rev(chars):
    if chars:
        size = len(chars)
        for i in range(size // 2):
            chars[i], chars[size - 1 - i] = chars[size - 1 - i], chars[i]
    return chars


# 冒泡
def test_mao(nums):
    for i in range(len(nums) - 1):
        for j in range(len(nums) - i - 1):
            j_ = nums[j]
            nums_j_ = nums[j + 1]
            if nums[j] > nums[j + 1]:
                nums[j], nums[j + 1] = nums[j + 1], nums[j]
    return nums


if __name__ == '__main__':
    print(test_mao([2, 0, 6, 5, 3]))